version: '3.8'
services:
  mongo-express:
    image: mongo-express:latest
    environment:
      ME_CONFIG_MONGODB_ADMINUSERNAME: root
      ME_CONFIG_MONGODB_ADMINPASSWORD: example
      ME_CONFIG_MONGODB_SERVER: mongo-primary
      ME_CONFIG_MONGODB_ENABLE_ADMIN: "true"
      ME_CONFIG_MONGODB_REPLSET_NAME: "rs0"
    ports:
      - "8081:8081"
    networks:
      - mongo-cluster
    depends_on:
      - mongo-primary
      - mongo-secondary
      - mongo-arbiter
  mongo-primary:
    image: mongo:latest
    hostname: mongo-primary
    environment:
      MONGO_INITDB_ROOT_USERNAME: root
      MONGO_INITDB_ROOT_PASSWORD: example
      MONGO_INITDB_REPLICA_SET_NAME: "rs0"
    ports:
      - "27017:27017"
    volumes:
      - mongo-primary-data:/data/db
      - ./initiateReplicaSet.js:/docker-entrypoint-initdb.d/initiateReplicaSet.js:ro
    networks:
      - mongo-cluster

  mongo-secondary:
    image: mongo:latest
    hostname: mongo-secondary
    environment:
      MONGO_INITDB_ROOT_USERNAME: root
      MONGO_INITDB_ROOT_PASSWORD: example
      MONGO_INITDB_REPLICA_SET_NAME: "rs0"
    volumes:
      - mongo-secondary-data:/data/db
    networks:
      - mongo-cluster

  mongo-arbiter:
    image: mongo:latest
    hostname: mongo-arbiter
    environment:
      MONGO_INITDB_ROOT_USERNAME: root
      MONGO_INITDB_ROOT_PASSWORD: example
      MONGO_INITDB_REPLICA_SET_NAME: "rs0"
    volumes:
      - mongo-arbiter-data:/data/db
    networks:
      - mongo-cluster

networks:
  mongo-cluster:
    driver: bridge

volumes:
  mongo-primary-data:
  mongo-secondary-data:
  mongo-arbiter-data:
